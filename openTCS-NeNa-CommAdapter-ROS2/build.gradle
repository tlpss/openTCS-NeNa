// ================== Set HERE your Ros2-Java workspace path. ==================
String ros2JavaPath = '/home/thomas/ROS/rcljava/ros2_java_ws/'
// =============================================================================

// JaCoCo
apply plugin: 'jacoco'

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            // Exclude Control Center components
            fileTree(dir: it, exclude: 'nl/saxion/nena/opentcs/commadapter/ros2/control_center/*')
        })
    }
}

apply from: "${rootDir}/gradle/guice-project.gradle"

String dir_rcljava = ros2JavaPath + 'install_isolated/rcljava/share/rcljava/java/'
String dir_rcljava_common = ros2JavaPath + 'install_isolated/rcljava_common/share/rcljava_common/java/'
String dir_std_msgs = ros2JavaPath + 'install_isolated/std_msgs/share/std_msgs/java/'
String dir_geometry_msgs = ros2JavaPath + 'install_isolated/geometry_msgs/share/geometry_msgs/java/'
String dir_builtin_interfaces = ros2JavaPath + 'install_isolated/builtin_interfaces/share/builtin_interfaces/java/'
String dir_action_msgs = ros2JavaPath + 'install_isolated/action_msgs/share/action_msgs/java/'
String dir_unique_identifier_msgs = ros2JavaPath + 'install_isolated/unique_identifier_msgs/share/unique_identifier_msgs/java/'

task checkRos2JavaPath {
    if (!new File(ros2JavaPath + 'install_isolated/local_setup.sh').exists())
        throw new Exception("Ros2-Java not found OR not build. Specify the path in build.gradle.")
}

dependencies {
    // Include 'local' ROS2-Java dependencies
    checkRos2JavaPath
    compile fileTree(include: ['*.jar'], dir: dir_rcljava)
    compile fileTree(include: ['rcljava_common.jar', 'commons-lang3-3.7.jar','log4j-1.2.17.jar','slf4j-api-1.7.21.jar'], dir: dir_rcljava_common)
//    compile fileTree(include: ['rcljava_common.jar', 'commons-lang3-3.7.jar','log4j-1.2.17.jar','slf4j-api-1.7.21.jar','slf4j-jdk14-1.7.21.jar'], dir: dir_rcljava_common)
    compile fileTree(include: ['*.jar'], dir: dir_std_msgs)
    compile fileTree(include: ['*.jar'], dir: dir_geometry_msgs)
    compile fileTree(include: ['*.jar'], dir: dir_builtin_interfaces)
    compile fileTree(include: ['*.jar'], dir: dir_action_msgs)
    compile fileTree(include: ['*.jar'], dir: dir_unique_identifier_msgs)

    // Fixes Log4j error
//    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.13.1'


    // OpenTCS
    compile project(':openTCS-NeNa-Common')

    compile group: 'org.opentcs', name: 'opentcs-api-injection', version: openTcsBaselineVersion
    compileOnly group: 'org.opentcs', name: 'opentcs-api-injection', version: openTcsBaselineVersion, classifier: 'sources'

    compile group: 'org.opentcs', name: 'opentcs-common', version: openTcsBaselineVersion
    compileOnly group: 'org.opentcs', name: 'opentcs-common', version: openTcsBaselineVersion, classifier: 'sources'

    compile group: 'org.opentcs.contrib', name: 'opentcs-contrib-tcp-netty', version: '0.13.0'
    compileOnly group: 'org.opentcs.contrib', name: 'opentcs-contrib-tcp-netty', version: '0.13.0', classifier: 'sources'

    compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
    compileOnly group: 'commons-codec', name: 'commons-codec', version: '1.10', classifier: 'sources'

    // Lombok todo: Handle Lombok related warning "warning: No processor claimed any of these annotations: javax.inject.Inject,com.google.inject.assistedinject.Assisted,org.opentcs.customizations.kernel.KernelExecutor,org.opentcs.configuration.ConfigurationEntry,org.opentcs.configuration.ConfigurationPrefix,javax.annotation.Nonnull,javax.annotation.Nullable,org.opentcs.customizations.ServiceCallWrapper"
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

}
